---
import BaseLayout from '../../layouts/BaseLayout.astro';

import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';

---

<BaseLayout title="Calculator App" description="Personal project to learn REACT">
	<div class="stack gap-20">
		<div class="wrapper stack gap-15">
			<header>
				<a class="back-link" href="/work/"><Icon icon="arrow-left" /> All Projects</a>
				<Hero title="Calculator App" align="start">
					<div class="details">
						<div class="tags">
							<Pill>Data Processing</Pill>
							<Pill>Design</Pill>
							<Pill>Web Dev</Pill>
						</div>
						<p class="description">NASA Space Apps 2023 Submission for Challenge: Immersed in the Sounds of Space</p>
					</div>
				</Hero>
			</header>
			<main class="main">
				<div>
					<div class="img-container">
					  <img src="/assets/stock-4.jpg" alt="Calculator app UI"/>
					</div>
					<div class="new-section">
					  <div><a class="bolden">Tech Stack: </a></div><div class="gap"><a class="regular">Python(PyDub, MoviePy, matplotlib, etc), Astronify, Audiolazy, Astro TypeScript, Tailwind CSS, Vercel</a></div>
					  <div><a class="bolden">Duration: </a></div><div class="gap"><a class="regular">2023 October 7-8</a></div>
					  <div><a class="bolden">Links: </a></div><div class="gap"><a href="https://github.com/SuperSonicNASA" class="regular"><Icon icon='github-logo'/>GitHub</a>
						<a href="https://web-app-symphonies-beyond-earth.vercel.app" class="regular">Web App Demo</a></div>
					</div>
				  </div>
				<div class="content"><p>
					<h4 color="var(--accent-regular)">SuperSonic - Symphonies Beyond Earth</h4> 

					Our project is an ambitious educational initiative that aims to introduce 
					sonification as a novel concept and strives to establish the interconnectedness 
					between human beings and infinite space. We have developed a system of sonification 
					that translates galaxial 3D and 2D data into a plethora of sounds. Then, we applied them 
					to a web application that presented them in a visually captivating manner. Simulating 
					space travel from the earth to outer space for our users, we start from Earth and as 
					the ‘travelers’ scroll down, they will be able to ‘visit’ the space images of their choices 
					to experience the symphonies the space data can produce by the process of sonification.
				<br/><br/>
				<br><p class="hr-lines"> Data Sonification Methodology</p><br>
				In Python, loop through each column of pixels within the image, then depending on whether the image is RGB/RGBA, or grayscale, we calculate the average R, G, B values of the column:<br/>
				1. If the mode of the image is RGB or RGBA, we use PIL’s getpixel function to assign r, g, b to the corresponding RGB value<br/>
				2. If the mode of the image is grayscale, we assign to r, g, b the same grayscale value.<br/>
				Calculating the average of r, g, and b, then turning those averages into pitch<br/>
				Using the equation pitch = (red + blue + green)/10, we derive a pitch from the average RGB value of each column.<br/>
				The reason why we used this equation is that, through various experiments, the resultant pitch would produce the best, most soothing sound to the ears, while still maintaining the effect of the change in RGB on the audible sound.<br/>
				
				<br/>
				With the pitch produced, we derive certain notes using: note = base_frequency * (semitone_ratio ** pitch) (Where: Semitone_ratio = 2 ** (1 / 12), Sase_frequency = 130.81 (C3 frequency in Hz)<br/>
				Using the notes, we plug it into a few sine waves to complicate the waveforms in order to produce a more intriguing pattern of sound. From this, we produce an audio using Pydub.<br/>
				Performing the same sweeping method from left to right with the animation using moviepy.editor, and syncing the sound up with the sweeping motion through Pydub.<br/>
				Finally, add the existing audio into the video using AudioSegment of Pydub and export the product.</div>
			</main>
		</div>
	</div>
</BaseLayout>

<style>
	.hr-lines{
	position: relative;
	max-width: 100%;
	text-align: center;
	font-weight: bold;
	}

	.hr-lines:before{
	content:" ";
	height: 8%;
	width: 24%;
	background: var(--accent-regular);
	display: block;
	position: absolute;
	top: 50%;
	left: 0;
	}

	.hr-lines:after{
	content:" ";
	height: 8%;
	width: 24%;
	background: var(--accent-regular);
	display: block;
	position: absolute;
	top: 50%;
	right: 0;
	}
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
		font-size: 1.5rem;
		font-weight: bold;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.main {
	display: flex;
	align-items: flex-start;
	}
	.bolden {
		color: var(--gray-200);
		font-weight: bold;
	}
	.regular {
		color: var(--accent-regular);
	}
	.new-section {
		top: 20%;
		flex: 1; 
		width: 95%;
	}
	.img-container {
		display: grid;
		justify-content: center; 
		align-items: center; 
		width: 93%;
		height: 93%; 
		margin-right: 20px;
		margin-bottom: 20px;
	}
	.gap {
		margin-bottom: 10px;
	}
	.content {
		max-width: 65ch;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}
</style>
